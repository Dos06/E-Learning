@*@model Elearning.Models.User*@
@model Elearning.Models.UsersViewModel

@{
    ViewBag.Title = "Edit";
}
<div class="container body-content">

    <h2>Edit</h2>

    @using (Html.BeginForm("UploadAvatar", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserId)
        <div>
            @Html.TextBox("UploadedImage", "", new { type = "File" })

            <input type="submit" value="Upload" class="btn btn-dark btn-lg mt-4 mb-5" />
            @{
                if (ViewBag.Message != null)
                {
                    @ViewBag.imagename
                    <hr />
                    @ViewBag.Message
                }
            }
        </div>
    }

    @using (Html.BeginForm("EditProfile", "Users", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*@Html.HiddenFor(model => model.Id)*@
            @Html.HiddenFor(model => model.UserId)

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PasswordConfirm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PictureUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PictureUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PictureUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Courses, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @for (int i = 0; i < Model.Courses.Count(); i++)
                    {
                        @Html.EditorFor(model => Model.Courses[i].Checked)
                        @Html.DisplayFor(model => Model.Courses[i].Name)

                        @Html.HiddenFor(model => Model.Courses[i].Name)
                        @Html.HiddenFor(model => Model.Courses[i].Id)
                        <br>
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success btn-lg" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Profile", "Profile")
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
