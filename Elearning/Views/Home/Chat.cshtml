<style>
    div.panel-body {
        overflow: scroll;
        background: url('http://subtlepatterns.com/patterns/geometry2.png');
    }
</style>

<div class="container">
    <h2>Chat Box</h2>

    <div class="chat-panel panel panel-default">
        <div class="panel-heading">
            ChatBox using SingalR
            <i class="fa fa-paper-plane fa-fw"></i>
        </div>
        <!-- /.panel-heading -->
        <div class="panel-body" id="chat" style="height:250px;">
            <input type="hidden" id="displayname" />

            <p id="discussion"></p>
        </div>
        <!-- /.panel-body -->
        <div class="panel-footer">
            <div class="input-group">
                <span class="col-1">
                    <button type="button" class="btn btn-info btn-lg w-100 h-100 fas fa-microphone" id="btnGiveCommand" value="Voice"><i class="text-light fas fa-microphone"></i></button>
                </span>

                <input id="message" type="text" name="message" class="form-control input-sm col-9" placeholder="Type your message here..." />

                <span class="input-group-btn col-2">
                    <input type="button" class="btn btn-info btn-lg col-12 h-100" id="sendmessage" value="Send">

                </span>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/SignalR/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                if (name == "Dos") {
                    // Add the message to the page.
                    $('#discussion').append('<p style="color:green; text-align:left; width:500px"><strong><img = src="https://www.phplivesupport.com/pics/icons/avatars/public/avatar_7.png" title="Atir">'
                        + ' </strong> ' + htmlEncode(message) + '</p>');
                }
                else if (name != "Dos") {
                    // Add the message to the page.
                    $('#discussion').append('<p style="color:blue;text-align:right;"><strong><img = src="https://www.phplivesupport.com/pics/icons/avatars/public/avatar_71.png" title="Peter">'
                        + ' </strong> ' + htmlEncode(message) + '</p>');
                }
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });


            var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;
            var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;

            var grammar = '#JSGF V1.0;'

            var recognition = new SpeechRecognition();
            var speechRecognitionList = new SpeechGrammarList();

            speechRecognitionList.addFromString(grammar, 1);
            recognition.grammars = speechRecognitionList;
            recognition.lang = 'en-US';
            recognition.interimResults = true;

            recognition.onresult = function (event) {
                let command = event.results[0][0].transcript;
                let isFinal = event.results[0].isFinal;
                message.value = command;
                if (isFinal) {
                    chat.server.send(displayname.value, command);
                }
            }

            document.querySelector('#btnGiveCommand').onclick = function () {
                recognition.start();
            };

            recognition.onspeechend = function () {
                recognition.stop();
            };

            recognition.onerror = function (event) {
                message.value = 'Error occurred in voice recognition: ' + event.error;
            };

        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}